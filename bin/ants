#!/bin/bash
# ------------------------------------------------------------------
# [Christoph Engelmayer]
# ANTS - Another Note Taking Script
# Bash script to help organize notes.
# ------------------------------------------------------------------

VERSION=0.0.1
USAGE="Usage: ants -hv args"

OPT_STORAGE_DIR="$HOME/Code/ants/notes"
OPT_EDITOR="vim"
OPT_TIMESTAMP="%Y_%m_%d_%H%M"
OPT_FILEEXT="md"

# --- Option processing --------------------------------------------
while getopts ":vh" optname
  do
    case "$optname" in
      "v")
        echo "Version $VERSION"
        exit 0;
        ;;
      "h")
        echo $USAGE
        exit 0;
        ;;
      "?")
        echo "Unknown option $OPTARG"
        exit 0;
        ;;
      ":")
        echo "No argument value for option $OPTARG"
        exit 0;
        ;;
      *)
        echo "Unknown error while processing options"
        exit 0;
        ;;
    esac
  done

shift $(($OPTIND - 1))

cmd=$1
param=$2
command="command_$1"

# -----------------------------------------------------------------
function command_new {
    filename=$(generate_filename $2)
    # create_template "$filename"
    # $OPT_EDITOR "$OPT_STORAGE_DIR/$filename"
}

function generate_filename {
    # filename=$(date +$OPT_TIMESTAMP)
    # if [[ $param ]]
    # then
    #     filename=$filename"_$param"
    # fi
    # echo $filename"."$OPT_FILEEXT
}

function create_template {
    mkdir -p $OPT_STORAGE_DIR
    ( echo "---"
      echo "" # TITLE
      echo $(date +"%d.%m.%Y-%H:%M:%S")
      echo "---"
      echo ""
      echo ""
    )>$OPT_STORAGE_DIR"/$1"
}

# -----------------------------------------------------------------
# -----------------------------------------------------------------
if [ -n "$(type -t ${command})" ] && [ "$(type -t ${command})" = function ]; then 
   ${command}
else 
   echo "'${cmd}' is NOT a command"; 
fi
