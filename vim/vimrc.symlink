set nocompatible         				" We want the latest Vim settings/options.

"-------------Plugins--------------"
filetype off                			" required
" Set the runtime path to include Vundle and initialize.
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'


" Navigation
Plugin 'tpope/vim-vinegar'              " sidebar like directory browser
Plugin 'scrooloose/nerdtree'            " A tree explorer plugin
Plugin 'CTrlpvim/ctrlp.vim'             " Fuzzy file, buffer, mru, tag, etc finder

" Search and Replace
Plugin 'rking/ag.vim'                   " plugin for the_silver_searcher, 'ag'
Plugin 'skwp/greplace.vim'              " Global search and replace

" Snippets
Plugin 'MarcWeber/vim-addon-mw-utils'   " Snipmate dependency - interpret a file by function and cache file automatically
Plugin 'tomtom/tlib_vim'                " Snipmate dependency - Some utility functions
Plugin 'garbas/vim-snipmate'            " implements some of TextMate's snippets features

" Autocompletion, Formatting, etc.
Plugin 'tpope/vim-surround'             " quoting/parenthesizing made simple
Plugin 'ervandew/supertab'              " Perform all your vim insert mode completions with Tab
Plugin 'jiangmiao/auto-pairs'           " insert or delete brackets, parens, quotes in pair
Plugin 'tomtom/tcomment_vim'            " An extensible & universal comment vim-plugin that also handles embedded filetypes

" Visual helpers
Plugin 'gorodinskiy/vim-coloresque'     " css/less/sass/html color preview
Plugin 'Yggdroot/indentLine'            " Display the indention levels with thin vertical lines

" Language/File specific plugins
Plugin 'sheerun/vim-polyglot'           " A solid language pack 
Plugin 'arnaud-lb/vim-php-namespace'    " types 'use' statements for you (Needs Ctags)


" All of your Plugins must be added before the following line
call vundle#end()
filetype plugin indent on               " required




"-------------Settings--------------"
syntax enable
set backspace=indent,eol,start			" Make backspace behave like every other editor.
let mapleader = ',' 			    	" The default is \, but a comma is much better.
set number					            " Let's activate line numbers.
set visualbell					        " don't beep
set noerrorbells                        " don't beep
set scrolloff=3                         " Start scrolling slightly before the cursor reaches an edge
set sidescrolloff=5                     " Start scrolling slightly before the cursor reaches an edge
set sidescroll=1                        " Scroll sideways a character at a time, rather than a screen at a time
set clipboard=unnamed                   " Yank into system clipboard
set autowriteall                        " Automatically write the file when switching buffers.
set complete=.,w,b,u 					" Set our desired autocompletion matching.
set foldlevel=99                        " Unfold all folds by default
set ignorecase                          " ignore case when searching
set smartcase                           " ignore case if search pattern is all lowercase,
set whichwrap=h,l,b,<,>,~,[,]           " Allow motions over line-endings etc
autocmd TabEnter * stopinsert           " Start new tabs in normal mode
" Allow vertical motions in long lines
noremap j gj
noremap k gk
" Swap files out of the project root
set backupdir=~/.vim/backup//
set directory=~/.vim/swap//
" Files and directories to hide
let g:netrw_list_hide='.DS_Store'



" -------------Tabs, indentation and lines-------------"
" 4 spaces please
set expandtab
set shiftwidth=4
set tabstop=4
set softtabstop=4
set shiftround                          " Round indent to nearest multiple of 4




"-------------Visuals--------------"
set background=dark 
let g:sierra_Twilight = 1               " Use darker sierra colorscheme
colorscheme sierra                      " Use sierra colorscheme
set t_CO=256							" Use 256 colors. This is useful for Terminal Vim.
set guifont=menlo\ for\ powerline:h16	" Set the default font family and size.
set linespace=15   				        " Macvim-specific line-height.
set guioptions-=e					     "Disable GUI tabs
" Set linenumber background to background color
highlight LineNr guibg=bg 

" Disable Gui scrollbars.
set guioptions-=l					
set guioptions-=L
set guioptions-=r
set guioptions-=R




"-------------Search--------------"
set hlsearch							" Highlight all matched terms.
set incsearch							" Incrementally highlight, as we type.




"-------------Split Management--------------"
set splitbelow 							" Make splits default to below...
set splitright							" ...and to the right.

" Simpler mappings to switch between splits.
nmap <C-J> <C-W><C-J>
nmap <C-K> <C-W><C-K>
nmap <C-H> <C-W><C-H>
nmap <C-L> <C-W><C-L>




"-------------Mappings--------------"
" Make it easy to edit the Vimrc file.
nmap <Leader>ev :tabedit $MYVIMRC<cr>
" Make it easy to edit snippet files.
nmap <Leader>es :e ~/.vim/snippets/

" Make it easy to run phpunit
nmap <Leader>t :!./vendor/bin/phpunit<cr>
nmap <Leader>tt :!./vendor/bin/phpunit --filter=

" Laravel Artisan commands
nmap <Leader>a :!php artisan 
nmap <Leader>am :!php artisan make:

" Composer commands
nmap <Leader>cd :!composer dump-autoload<cr>
nmap <Leader>cu :!composer update<cr>

" Add simple highlight removal.
nmap <Leader><space> :nohlsearch<cr>

"Disable Arrow Keys (Hard Mode)
noremap  <Up> ""
noremap! <Up> <Esc>
noremap  <Down> ""
noremap! <Down> <Esc>
noremap  <Left> ""
noremap! <Left> <Esc>
noremap  <Right> ""
noremap! <Right> <Esc>




"-------------Plugins--------------"
"/
"/ CtrlP
"/
let g:ctrlp_custom_ignore = 'node_modules\|DS_Store|bower_components\|vendor\|git'
let g:ctrlp_match_window = 'top,order:ttb,min:1,max:30,results:30'
map <D-p> :CtrlP<cr>


"/
"/ NERDTree 
"/
let NERDTreeHijackNetrw = 0		"Use dash to open Vinegar instead of NERDTree
"Make NERDTree easier to toggle.
nmap <D-1> :NERDTreeToggle<cr>


"/
"/ vim-php-namespace
"/
" Import classes (add use statements)
function! IPhpInsertUse()
    call PhpInsertUse()
    call feedkeys('a',  'n')
endfunction
autocmd FileType php inoremap <Leader>pu <Esc>:call IPhpInsertUse()<CR>
autocmd FileType php noremap <Leader>pu :call PhpInsertUse()<CR>

" Make class names fully qualified
function! IPhpExpandClass()
    call PhpExpandClass()
    call feedkeys('a', 'n')
endfunction
autocmd FileType php inoremap <Leader>pe <Esc>:call IPhpExpandClass()<CR>
autocmd FileType php noremap <Leader>pe :call PhpExpandClass()<CR>


"/
"/ indentLine 
"/
let g:indentLine_color_term = 239       " Line color
let g:indentLine_color_gui = '#333333'  " GUI line color
let g:indentLine_enabled = 1            " Display lines by default
let g:indentLine_char = '|'             " Set line character

"-------------Auto-Commands--------------"
"Automatically source the Vimrc file on save.

augroup autosourcing
	autocmd!
	autocmd BufWritePost .vimrc source %
augroup END



"-------------NOTES--------------"
" :Ag <searchterm>                        " Search in whole project
" :Gsearch                                " Project wide Search and replace in whole project
" With text selected [S]                  " Add surrounding tag/quote/whatever
